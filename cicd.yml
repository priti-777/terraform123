name: CI/CD Pipeline with Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.6

      # Step 3: Configure AWS credentials (Make sure to add AWS credentials to GitHub secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: "us-west-2"

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Step 5: Plan the Terraform changes
      - name: Plan Terraform deployment
        run: terraform plan

      # Step 6: Apply Terraform configuration
      - name: Apply Terraform deployment
        run: terraform apply -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      # Step 1: Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Deploy Application (simulating with echo for now)
      - name: Deploy Application
        run: |
          echo "Deploying Application to EC2..."
          ssh -i your-key.pem ubuntu@${{ needs.terraform.outputs.instance_public_ip }} "cd /path/to/your/app && docker-compose up -d"
